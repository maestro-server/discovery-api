def rules(conn):
    return {
        'name': {'call': 'switch', 'source': 'name'},
        'unique_id': {'call': 'switch', 'source': 'unique_id'},
        'api_name': {'call': 'switch', 'source': 'api_name'},
        'provider': {'call': 'switch', 'source': 'provider'},
        'memory': {'call': 'switch', 'source': 'memory'},

        'compute_units_ecu': {'call': 'switch', 'source': 'compute_units_ecu'},
        'vcpus': {'call': 'switch', 'source': 'vcpus'},
        'gpus': {'call': 'switch', 'source': 'gpus'},
        'fpgas': {'call': 'switch', 'source': 'fpgas'},
        'tags': {'call': 'switch', 'source': 'tags'},
        'ecu_per_vcpu': {'call': 'switch', 'source': 'ecu_per_vcpu'},
        'physical_processor': {'call': 'switch', 'source': 'physical_processor'},
        'clock_speed_ghz': {'call': 'switch', 'source': 'clock_speed_ghz'},
        'intel_avx': {'call': 'switch', 'source': 'intel_avx'},
        'intel_avx2': {'call': 'switch', 'source': 'intel_avx2'},
        'intel_turbo': {'call': 'switch', 'source': 'intel_turbo'},
        'instance_storage': {'call': 'switch', 'source': 'instance_storage'},
        'instance_storage_already_warmed_up': {'call': 'switch', 'source': 'instance_storage_already_warmed_up'},
        'instance_storage_ssd_trim_support': {'call': 'switch', 'source': 'instance_storage_ssd_trim_support'},
        'arch': {'call': 'switch', 'source': 'arch'},
        'network_performance': {'call': 'switch', 'source': 'network_performance'},
        'ebs_optimized_max_bandwidth': {'call': 'switch', 'source': 'ebs_optimized_max_bandwidth'},
        'ebs_optimized_throughput': {'call': 'switch', 'source': 'ebs_optimized_throughput'},
        'ebs_optimized_max_16_k_iops': {'call': 'switch', 'source': 'ebs_optimized_max_16_k_iops'},
        'max_ips': {'call': 'switch', 'source': 'max_ips'},
        'enhanced_networking': {'call': 'switch', 'source': 'enhanced_networking'},
        'vpc_only': {'call': 'switch', 'source': 'vpc_only'},
        'ipv_6_support': {'call': 'switch', 'source': 'ipv_6_support'},

        'placement_group_support': {'call': 'switch', 'source': 'placement_group_support'},
        'linux_virtualization': {'call': 'switch', 'source': 'linux_virtualization'},
        'linux_on_demand_cost': {'call': 'switch', 'source': 'linux_on_demand_cost'},
        'linux_reserved_cost': {'call': 'switch', 'source': 'linux_reserved_cost'},
        'rhel_on_demand_cost': {'call': 'switch', 'source': 'rhel_on_demand_cost'},
        'rhel_reserved_cost': {'call': 'switch', 'source': 'rhel_reserved_cost'},
        'sles_on_demand_cost': {'call': 'switch', 'source': 'sles_on_demand_cost'},
        'sles_reserved_cost': {'call': 'switch', 'source': 'sles_reserved_cost'},
        'windows_on_demand_cost': {'call': 'switch', 'source': 'windows_on_demand_cost'},
        'windows_reserved_cost': {'call': 'switch', 'source': 'windows_reserved_cost'},
        'windows_sql_web_on_demand_cost': {'call': 'switch', 'source': 'windows_sql_web_on_demand_cost'},
        'windows_sql_web_reserved_cost': {'call': 'switch', 'source': 'windows_sql_web_reserved_cost'},
        'windows_sql_std_on_demand_cost': {'call': 'switch', 'source': 'windows_sql_std_on_demand_cost'},
        'windows_sql_std_reserved_cost': {'call': 'switch', 'source': 'windows_sql_std_reserved_cost'},
        'windows_sql_ent_on_demand_cost': {'call': 'switch', 'source': 'windows_sql_ent_on_demand_cost'},
        'service': {'call': 'switch', 'source': 'service'},
        'is_public': {'call': 'switch', 'source': 'is_public'},
        'windows_sql_ent_reserved_cost': {'call': 'switch', 'source': 'windows_sql_ent_reserved_cost'},
        'ebs_optimized_surcharge': {'call': 'switch', 'source': 'ebs_optimized_surcharge'},

        'active': {'call': 'setV', 'source': True},
        'datacenters': {'call': 'fctDc',
                        'source': {**conn}},

        'owner': {'call': 'fctOwner',
                  'source': {**conn}},
        'accountant': {'call': 'fctAccountant', 'source': {**conn}},
        'roles': {'call': 'fctRoles',
                  'source': {**conn}},
        'checksum': {'call': 'checksum',
                     'source': None}
    }
